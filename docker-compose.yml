version: "3.8"
services:
  db:
    image: postgres:17-bookworm
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data:Z
    networks:
      - event_abozar_back

  redis:
    restart: unless-stopped
    image: redis:7.4.0-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - "6379"
    environment:
      - TZ=Asia/Tehran
    networks:
      - event_abozar_back

  web:
    build: .
    command: >
      sh -c "python manage.py migrate --no-input &&
       python manage.py collectstatic --no-input &&
       gunicorn --bind 0.0.0.0:8080 --forwarded-allow-ips='*' --access-logfile - --workers 3 --timeout 120 config.wsgi:application"
    volumes:
      - /home/event_abozar_back/static:/home/app/event_abozar/static/
      - /home/event_abozar_back/media:/home/app/event_abozar/media/
      - .:/home/app/event_abozar
    labels:
      co.elastic.logs/enabled: "true"
      filebeat_log: "true"
    ports:
      - 127.0.0.1:8080:8080
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - TZ=Asia/Tehran
    restart: unless-stopped
    networks:
      - event_abozar_back

  celery_worker:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - /home/event_abozar_back/static:/home/app/event_abozar/static/
      - /home/event_abozar_back/media:/home/app/event_abozar/media/
      - .:/home/app/event_abozar
    labels:
      co.elastic.logs/enabled: "true"
      filebeat_log: "true"
    depends_on:
      - redis
      - web
    env_file:
      - .env
    environment:
      - TZ=Asia/Tehran
    restart: unless-stopped
    networks:
      - event_abozar_back

  celery_beat:
    build: .
    command: celery -A config beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    labels:
      co.elastic.logs/enabled: "true"
      filebeat_log: "true"
    depends_on:
      - celery_worker
    env_file:
      - .env
    environment:
      - TZ=Asia/Tehran
    restart: unless-stopped
    networks:
      - event_abozar_back
  
  flower:
    build: .
    command: celery -A config flower --port=5555 --basic_auth="event_abozar:event_abozar" 
    ports:
      - 5555:5555
    depends_on:
      - celery_worker
    env_file:
      - .env
    environment:
      - TZ=Asia/Tehran
    restart: unless-stopped
    networks:
      - event_abozar_back

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - web
    networks:
      - event_abozar_back

networks:
  event_abozar_back: